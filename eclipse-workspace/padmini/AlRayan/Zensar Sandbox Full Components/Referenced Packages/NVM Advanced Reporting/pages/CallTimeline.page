<apex:page doctype="html-5.0" showChat="false" showHeader="false" sidebar="false" readOnly="true" standardStylesheets="false" standardController="NVMStatsSF__NVM_Call_Summary__c" extensions="NVMStatsSF.CallTimelineController">
<apex:stylesheet value="{!URLFOR($Resource.NVMStatsSF__Assets, '/css/styles.css')}"/>
<div align="left">

<apex:form >

<script>
//General for all browsers
var usesBGSound = false;
var canPlay = false;
var isPlaying = false;
var userSliderEvent = false;
var tStamp = 0.0;
var scale = 1;
var sLength = {!recordingLength};
var talkPos = 0;
//Timer looping during play
var playTime = null;
var recordingPauses;
</script>
<apex:outputPanel rendered="{!thisIsIE == TRUE && NVMStatsSF__NVM_Call_Summary__c.NVMStatsSF__Call_Recording__c != NULL}">

<bgsound id="sound"/>

<script>
//No way to tell if can't in IE - TODO more tests with XMLHTTP/IMG src for 302 codes...
canPlay = true;

usesBGSound = true;

function pause() {
  isPlaying = false;
  clearInterval(playTime);
  //if thisIsIE) just kill the background sound
  document.all.sound.src = null;
  //Also reset the time as we can't resume... yet.
  tStamp = 0.0;
}

</script></apex:outputPanel>

<apex:outputPanel rendered="{!thisIsIE == FALSE && NVMStatsSF__NVM_Call_Summary__c.NVMStatsSF__Call_Recording__c != NULL}">

<audio id="audioElement" preload="auto" autobuffer="true" onloadeddata="setOK()">
  <source src="{!NVMStatsSF__NVM_Call_Summary__c.NVMStatsSF__Call_Recording__c}" type="audio/wav"/>
</audio>

<script>
//NON IE - IE has to play the WAV as a bgSound, hence we can only start/stop it as yet, not control with slider

canPlay = false;

usesBGSound = false;

if (window.chrome) {
  audioElement.load();
}

function setOK() {
   canPlay = true;
   //If we have the actual audo file length, use that as our range max
   sLength = audioElement.duration;
}

function pause() {
  isPlaying = false;
  clearInterval(playTime);
  audioElement.pause();
}

function sliderMoved() {
  userSliderEvent = true;

  clearInterval(playTime);
  var wasPlaying = isPlaying;
  tStamp = slider.value * 1.0;
  audioElement.currentTime = slider.value;
  if (wasPlaying) playTime = setInterval(tick,1000);
  userSliderEvent = false;
}

</script></apex:outputPanel>



<script>

//Poss for tablets, etc. range... oninput="sliderMoved()" onchange



//Toggles play/pause
function playAudio() {
  //pause if clicked while playing
  if (isPlaying) {
    pause();
    return;
  }
  
  if (!canPlay) return;
  
  isPlaying = true;
  
  //for IE which can't do wav in audio but can in bgsound
  if (usesBGSound) {
    document.all.sound.src = '{!NVMStatsSF__NVM_Call_Summary__c.NVMStatsSF__Call_Recording__c}';
  }
  else {  
    audioElement.play();
  }
    
  //IE9: sProgress.width = 0;
  timeline.style.color="green";
  seconds.style.color="green";
  slider.visible=true;
  slider.style.margin = "1px";
  playTime = setInterval(tick,1000);
}

function tick() {
  if (!isPlaying  || userSliderEvent) return;
  console.log('tick');
  if((tStamp < sLength)) {
    tStamp += 1.0;
	
	if (recordingPauses != null && recordingPauses.length > 0) {
		var offs = 0;
		for (var rp = 0; rp < recordingPauses.length; rp++) {
			if (tStamp >= recordingPauses[rp].start) offs += recordingPauses[rp].duration * scale;
		}
		document.getElementById("pauseOffset").width = offs;
	}

   //IE9: sProgress.width = tStamp * scale;
    seconds.innerText = tStamp + 's';
    //Firefox:
    seconds.textContent = tStamp + 's';
    slider.value = tStamp * 1.0;
  }
  else {
    clearInterval(playTime);
    //IE9: sProgress.width = 0;
    tStamp = 0;
    timeline.style.color="white"; 
    seconds.style.color="white";
    isPlaying = false; 
  }
}

//New
function clearAndScaleForWidth(context, idealWidth, actualWidth, idealHeight, actualHeight) {
//alert(idealWidth + ':' + actualWidth);
    context.globalAlpha = 1;
    context.canvas.width = actualWidth;
    context.canvas.height = actualHeight;
    context.clearRect(0, 0, context.canvas.width, context.canvas.height);
    context.scale(actualWidth/idealWidth, actualHeight/idealHeight);
}



</script>

<apex:inputHidden value="{!NVMStatsSF__NVM_Call_Summary__c.NVMStatsSF__Key_Event_String__c}"/>
<apex:inputHidden value="{!NVMStatsSF__NVM_Call_Summary__c.NVMStatsSF__Agent_Event_String__c}"/>
<apex:inputHidden value="{!NVMStatsSF__NVM_Call_Summary__c.NVMStatsSF__CallTime__c}"/>
<apex:inputHidden value="{!NVMStatsSF__NVM_Call_Summary__c.NVMStatsSF__CallEndTime__c}"/>
<apex:inputHidden value="{!NVMStatsSF__NVM_Call_Summary__c.NVMStatsSF__Agent2_ID__c}"/>
<apex:inputHidden value="{!NVMStatsSF__NVM_Call_Summary__c.NVMStatsSF__Agent_Phone_Number__c}"/>
<apex:inputHidden value="{!NVMStatsSF__NVM_Call_Summary__c.NVMStatsSF__Total_Call_Duration__c}"/>
<apex:inputHidden value="{!NVMStatsSF__NVM_Call_Summary__c.NVMStatsSF__CallGuid__c}"/>
<apex:inputHidden value="{!NVMStatsSF__NVM_Call_Summary__c.NVMStatsSF__Automation_Segment__c}"/>
<apex:inputHidden value="{!NVMStatsSF__NVM_Call_Summary__c.NVMStatsSF__After_Call_Work_Time__c}"/>
<apex:inputHidden value="{!NVMStatsSF__NVM_Call_Summary__c.NVMStatsSF__Post_Call_Automation__c}"/>
<apex:inputHidden value="{!NVMStatsSF__NVM_Call_Summary__c.NVMStatsSF__Call_Recording__c}"/>
<apex:inputHidden value="{!NVMStatsSF__NVM_Call_Summary__c.NVMStatsSF__CLID__c}"/>
<apex:inputHidden value="{!NVMStatsSF__NVM_Call_Summary__c.NVMStatsSF__Consult_Time__c}"/>
<apex:inputHidden value="{!NVMStatsSF__NVM_Call_Summary__c.NVMStatsSF__Agent_Talk_Time__c}"/>
<apex:inputHidden value="{!NVMStatsSF__NVM_Call_Summary__c.NVMStatsSF__Agent2_Transfer_Time__c}"/>
<apex:inputHidden value="{!NVMStatsSF__NVM_Call_Summary__c.NVMStatsSF__Agent_Ring_Duration__c}"/>
<apex:inputHidden value="{!NVMStatsSF__NVM_Call_Summary__c.NVMStatsSF__NVM_AgentID__c}"/>
<apex:inputHidden value="{!NVMStatsSF__NVM_Call_Summary__c.NVMStatsSF__Agent_List__c}"/>
<apex:inputHidden value="{!NVMStatsSF__NVM_Call_Summary__c.NVMStatsSF__AgentChkStr__c}"/>
<apex:inputHidden value="{!NVMStatsSF__NVM_Call_Summary__c.NVMStatsSF__CR_Start_Immediate__c}"/>
<apex:inputHidden value="{!NVMStatsSF__NVM_Call_Summary__c.RecordType}"/>

<span>
<canvas id="gantt" width="800" height="64" onclick="playAudio();"/>
</span>

<div id="timeline" style="vertical-align:top;padding:0px;top:0px;color:white;font-size:9px;font-family:Calibri">
 <img id="timelimeSpacer" height="1" width="66" src="{!URLFOR($Resource.Assets, 'images/white.png')}"/>
 <img id="ibStart" height="1" width="{!talkStartedAtSecs * (730/(1+totalDuration))}" src="{!URLFOR($Resource.Assets, 'images/white.png')}"/>
 <img id="pauseOffset" height="1" width="0" src="{!URLFOR($Resource.Assets, 'images/white.png')}"/>
 <apex:outputPanel rendered="{!thisIsIE == TRUE}">
  <progress id="slider" _value="0" max="{!recordingLength}" style="color:white;border:0px;height:10px;width:{!recordingLength * (730/(1+totalDuration))}px">
   <!-- IE9 will read this as it doesn't recognise progress - TODO animate for IE9 -->
   <img id="sProgress" height="1" width="0" src="{!URLFOR($Resource.Assets, 'images/white.png')}"/>^&nbsp;
  </progress>
 </apex:outputPanel>
 <apex:outputPanel rendered="{!thisIsIE == FALSE}">
  <input id="slider" value="0" step="1" style="height:10px;width:{!recordingLength * (730/(1+totalDuration))}px" type="range" min="0" max="{!recordingLength}" onmouseup="sliderMoved()"/>
 </apex:outputPanel>
 <span id="seconds" style="vertical-align:top;padding:0px;top:0px;color:white;font-size:11px;font-family:Calibri"/>
</div>

<script>
var jd = '{!jsonData}';
//alert(jd);
var myData = JSON.parse(jd);
recordingPauses = myData.recordingPauses;

//We have enough room for 4 x 16 px wide swimlanes in a 64px high canvas; vertical align:
var topPad = 32 - 8 * myData.swimlanes.length;

//keep this in sync with timelimeSpacer width (about 4px more than that)
var margin = 70;

//Scale, Draw labels and lines

var context = gantt.getContext('2d');
var idealHeight = 64;
if (myData.swimlanes.length > 4) {
    idealHeight = myData.swimlanes.length * 16;
    topPad = 0;
}
clearAndScaleForWidth(context, 800, 800, idealHeight, 64);
context.lineWidth = 0.5;
context.fillStyle = '#000';
context.strokeStyle = '#BBBBBB';

//Write gridlines - start at margin px
var xpos = 0;
var xFactor = (context.canvas.width-margin)/(1 + myData.totalTimeSecs);
scale = xFactor;
//Draw grid
context.font = 'italic 8pt Calibri';
context.fillStyle = '#BBBBBB';
for (var i = 0; i < myData.gridLines.length; i++) {
   context.beginPath();
   //Always add 0.5 to the line position to prevent anti-aliasing!
   xpos = margin + 0.5 + Math.floor(xFactor * myData.gridLines[i].tpos);
   context.moveTo(xpos, 0);
   context.lineTo(xpos, idealHeight);
   context.stroke();
   //write time
   context.fillText(myData.gridLines[i].label, xpos + 1, 8);
   context.fillText(myData.gridLines[i].label, xpos + 1, idealHeight);  
}

//Draw the bars... sep fn
context.font = '8pt Calibri';
context.fillStyle = '#000';

//for measuring how text fits the bars
var spareWidth = 0;

ypos = 8 + topPad;

//Gantt bars are thick - 16px wide stripes
context.lineWidth = 16;

//loop over swimlanes and then the milestones within each lane
for (var lane = 0; lane < myData.swimlanes.length; lane++) {
    xpos = margin;

//draw the milestones in order so low-detail agent event milesones are overwritten by hi-res call events    
    for (var m = 0; m < myData.swimlanes[lane].milestones.length; m ++) {
        var milestone = myData.swimlanes[lane].milestones[m];
        context.beginPath();
        context.strokeStyle = milestone.colour;
        
        xpos = (margin + milestone.startAtSecs * xFactor) + 0.5;
        context.moveTo(xpos, ypos);
        var len = (milestone.durationSecs * xFactor);
        if (len < 0.5) len = 0.5;

        context.lineTo(xpos + len + 0.5, ypos);
        context.stroke();

        //draw text on bar if will fit...

        spareWidth = 4 + milestone.durationSecs * xFactor - context.measureText(milestone.label).width;
        if(spareWidth >= 0) context.fillText(milestone.label, xpos + (spareWidth/2) - 1.5, ypos);

        spareWidth = 4 + milestone.durationSecs * xFactor - context.measureText(milestone.descr).width;
        if(spareWidth >= 0) context.fillText(milestone.descr, xpos + (spareWidth/2) - 1.5, ypos+8);
    
    }
    ypos += 16;

}

canPlay = true;

//Draw swimlane labels against a cleared background
context.font = '10pt Calibri';
context.fillStyle = '#000';
context.clearRect(0, 0, margin, context.canvas.height);
context.lineWidth = 0.5;
context.strokeStyle = '#BBBBBB';
for (var i = 0; i < myData.swimlanes.length; i++) {
    context.fillText(myData.swimlanes[i].label, 0, 12 + topPad + 16 * i);
	if (i > 0) {
        context.beginPath();
        context.moveTo(0, topPad + 16 * i);
        context.lineTo(context.canvas.width, topPad + 16 * i);
        context.stroke();
	}
}

</script>



</apex:form>
</div>
<!-- apex:outputText value="{_!_logs_}" escape="false"-->
</apex:page>