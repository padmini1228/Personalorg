<apex:page standardController="xmetric__Metric__c" extensions="xmetric.ChartExtController" showheader="false" sidebar="false">

    <script type="text/javascript" src="https://ajax.googleapis.com/ajax/libs/jquery/1.8.2/jquery.min.js" ></script>
    <I><apex:outputLabel value="No Metric Results to display in {!myObject.Name}" rendered="{!MetricResultList.size == 0}" ></apex:outputLabel></I>
    <br/><I><apex:outputLabel value="{!myObject.Name} Record is Inactive" rendered="{!myObject.xmetric__Active__c == false}" ></apex:outputLabel></I>
    <apex:outputPanel rendered="{!myObject.xmetric__Active__c == true}">
    <script type="text/javascript" rendered="{!myObject.xmetric__Active__c == true}">
    var metricResultsSize = parseInt({!MetricResultList.size});
    var minSize = (metricResultsSize > 4 ? metricResultsSize - 4 : 0);
    $(function () {
         $('#container').highcharts({
            chart: {
                zoomType: 'x',
                type: 'spline'
            },
            title: {
                text: '{!JSENCODE(myObject.Name)}'
            },
            xAxis: {
                type: 'category',
                min : minSize,
                range: metricResultsSize
            },
            yAxis: {
                title: {
                    text: '{!JSENCODE(myObject.Description__c)}'
                },
                min: {!minValue},
                max: {!maxValue},
                alternateGridColor: null,
                plotBands: [{
                    from: {!JSENCODE(plotBand_Green_from)}, //Low
                    to: {!JSENCODE(plotBand_Green_to)},

                    color: '{! if(myObject.Threshold_Type__c == 'Lower', $Label.Red_Color, $Label.Green_Color)}',
                    label: {
                        text: 'Green',
                        style: {
                            color: '{! if(myObject.Threshold_Type__c == 'Lower', $Label.Red_Color, $Label.Green_Color)}'
                        }
                    }
                },
                <apex:outputPanel layout="none" rendered="{!xmetric__Metric__c.xmetric__Use_Yellow_Threshold__c && JSENCODE(xmetric__Metric__c.xmetric__Type__c) != 'KPI'}" >
                    {
                        from: {!JSENCODE(plotBand_yellow_from)}, //Medium
                        to: {!JSENCODE(plotBand_yellow_to)},

                        color: '{! if(myObject.Threshold_Type__c == 'Lower', $Label.Amber_Color, $Label.Yellow_Color)}',
                        label: {
                            text: 'Yellow',
                            style: {
                                color: '{! if(myObject.Threshold_Type__c == 'Lower', $Label.Amber_Color, $Label.Yellow_Color)}'
                            }
                        }
                    },
                </apex:outputPanel>
                {
                    from: {!JSENCODE(plotBand_Amber_from)},
                    to: {!JSENCODE(plotBand_Amber_to)},

                    color: '{! if(myObject.xmetric__Threshold_Type__c == 'Lower' && myObject.xmetric__Use_Yellow_Threshold__c , $Label.Yellow_Color, $Label.Amber_Color)}',
                    label: {
                        text: 'Amber',
                        style: {
                            color: '{! if(myObject.xmetric__Threshold_Type__c == 'Lower' && myObject.xmetric__Use_Yellow_Threshold__c , $Label.Yellow_Color, $Label.Amber_Color)}'
                        }
                    }


                }, {
                    from: {!JSENCODE(plotBand_Red_from)}, //High
                    to: {!JSENCODE(plotBand_Red_to)},

                    color: '{! if(myObject.xmetric__Threshold_Type__c == 'Lower', $Label.Green_Color, $Label.Red_Color)}',
                    label: {
                        text: 'Red',
                        style: {
                            color: '{! if(myObject.xmetric__Threshold_Type__c == 'Lower', $Label.Green_Color, $Label.Red_Color)}'
                        }
                    }
                }]
            },
        navigator: {
            enabled: true,
            height: 18,

        },
        scrollbar: {
            enabled: true,
            barBackgroundColor: 'gray',
            barBorderRadius: 7,
            barBorderWidth: 0,
            buttonBackgroundColor: 'gray',
            buttonBorderWidth: 0,
            buttonArrowColor: 'yellow',
            buttonBorderRadius: 7,
            rifleColor: 'yellow',
            trackBackgroundColor: 'white',
            trackBorderWidth: 1,
            trackBorderColor: 'silver',
            trackBorderRadius: 7
        },
        plotOptions: {
            series: {
                cursor: 'pointer',
                point: {
                    events: {
                        click: function() {
                            window.open( this.options.url , '_blank');
                          //  location.href = this.options.url;
                        }
                    }
                }
            },
            spline: {
                lineWidth: 4,
                states: {
                    hover: {
                        lineWidth: 5
                    }
                },
                marker: {
                    enabled: false
                }
            }
        },

        tooltip: {
            hideDelay : 0,
            formatter: function() {
                this.y = parseFloat(this.y).toFixed(2);
                var yValue = this.y.toString().replace(/\B(?=(\d{3})+(?!\d))/g, ",");
                var metricType = new String("{!JSENCODE(LOWER(myObject.xmetric__Metric_Type__c))}");
                if (metricType == 'currency'){
                    yValue = '{!JSENCODE(userCurrencyISOCode)}'+yValue;
                }else if (metricType  == 'percentage'){
                    yValue = yValue+'%';
                }
                return '<table align="right" style="z-index:100;"  >'+
                            '<tr>'+
                                '<td style="font-size:9px;"><b>'+
                                    this.point.name+
                                '</b></td><br />'+
                            '</tr>'+
                            '<tr>'+
                                '<td style="font-size:9px;"><b>'+
                                   yValue+
                                '</b></td>'+
                            '</tr>'+
                        '</table>';
            }
        },
        series: [{
            name: '{!JSENCODE(myObject.xmetric__Type__c)}',
            data: [
                <apex:repeat value="{!MetricResultList}" var="metric" >
                    {
                    name:  '{!JSENCODE(metric.XaxisValue)}',
                    x:  {!metric.counter},
                    y:  {!metric.resultValue} ,
                    url: '/{!JSENCODE(metric.resultObjId)}'
                },

                </apex:repeat>]
        }],
        navigation: {
            menuItemStyle: {
                fontSize: '10px'
            }
        }
        });
    });
</script>
<script src="{!URLFOR($Resource.Stockcharts, 'Stockcharts/highstock.js')}" ></script>
<script src="{!URLFOR($Resource.Stockcharts, 'Stockcharts/modules/exporting.js')}" ></script>

<div id="container" style="height: 400px; margin: 0 auto" ></div>
</apex:outputPanel>


</apex:page>